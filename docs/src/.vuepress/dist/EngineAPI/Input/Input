<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Input | Docs</title>
    <meta name="generator" content="VuePress 1.9.10">
    <link rel="icon" type="image/svg" href="RogueEngineLogo.svg">
    <meta name="description" content="Documentation for Rogue Engine">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    
    <link rel="preload" href="/assets/css/0.styles.9e13fbe0.css" as="style"><link rel="preload" href="/assets/js/app.9264d7d6.js" as="script"><link rel="preload" href="/assets/js/2.b6990dbb.js" as="script"><link rel="preload" href="/assets/js/1.d6bea73e.js" as="script"><link rel="preload" href="/assets/js/37.b62504ea.js" as="script"><link rel="prefetch" href="/assets/js/10.74753b20.js"><link rel="prefetch" href="/assets/js/11.166c98b8.js"><link rel="prefetch" href="/assets/js/12.c8a39ed2.js"><link rel="prefetch" href="/assets/js/13.5c262607.js"><link rel="prefetch" href="/assets/js/14.11a9396d.js"><link rel="prefetch" href="/assets/js/15.f5beb89c.js"><link rel="prefetch" href="/assets/js/16.f42dacb8.js"><link rel="prefetch" href="/assets/js/17.13576655.js"><link rel="prefetch" href="/assets/js/18.0946172e.js"><link rel="prefetch" href="/assets/js/19.444ea1cf.js"><link rel="prefetch" href="/assets/js/20.eb988b8a.js"><link rel="prefetch" href="/assets/js/21.5c61a7f1.js"><link rel="prefetch" href="/assets/js/22.42cf6496.js"><link rel="prefetch" href="/assets/js/23.2269f217.js"><link rel="prefetch" href="/assets/js/24.3ddbe1a4.js"><link rel="prefetch" href="/assets/js/25.e0378aed.js"><link rel="prefetch" href="/assets/js/26.ca7a8ccf.js"><link rel="prefetch" href="/assets/js/27.a00b4cbf.js"><link rel="prefetch" href="/assets/js/28.0bfccc0f.js"><link rel="prefetch" href="/assets/js/29.77b365c4.js"><link rel="prefetch" href="/assets/js/3.4ca62f85.js"><link rel="prefetch" href="/assets/js/30.77b4b317.js"><link rel="prefetch" href="/assets/js/31.7ecb75d9.js"><link rel="prefetch" href="/assets/js/32.8a8dd005.js"><link rel="prefetch" href="/assets/js/33.422bab81.js"><link rel="prefetch" href="/assets/js/34.1c6d6dea.js"><link rel="prefetch" href="/assets/js/35.1c2f25a8.js"><link rel="prefetch" href="/assets/js/36.937e3802.js"><link rel="prefetch" href="/assets/js/38.614d3171.js"><link rel="prefetch" href="/assets/js/39.758b35c5.js"><link rel="prefetch" href="/assets/js/4.e6118056.js"><link rel="prefetch" href="/assets/js/40.5c1929f6.js"><link rel="prefetch" href="/assets/js/41.cb779bae.js"><link rel="prefetch" href="/assets/js/42.6f628348.js"><link rel="prefetch" href="/assets/js/43.7663434e.js"><link rel="prefetch" href="/assets/js/44.3ad994c2.js"><link rel="prefetch" href="/assets/js/45.0e05dce4.js"><link rel="prefetch" href="/assets/js/46.76b2f708.js"><link rel="prefetch" href="/assets/js/47.b3b20a73.js"><link rel="prefetch" href="/assets/js/48.64fa5ba3.js"><link rel="prefetch" href="/assets/js/49.7500067e.js"><link rel="prefetch" href="/assets/js/5.260bfa12.js"><link rel="prefetch" href="/assets/js/50.97915493.js"><link rel="prefetch" href="/assets/js/51.1cc6283c.js"><link rel="prefetch" href="/assets/js/52.03afe092.js"><link rel="prefetch" href="/assets/js/53.d79af6d4.js"><link rel="prefetch" href="/assets/js/54.30fd292c.js"><link rel="prefetch" href="/assets/js/6.a06e9bf2.js"><link rel="prefetch" href="/assets/js/7.aa8bfe18.js"><link rel="prefetch" href="/assets/js/vendors~docsearch.446d5291.js">
    <link rel="stylesheet" href="/assets/css/0.styles.9e13fbe0.css">
  </head>
  <body>
    <div id="app" data-server-rendered="true"><div class="theme-container"><header class="navbar"><div class="sidebar-button"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" viewBox="0 0 448 512" class="icon"><path fill="currentColor" d="M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"></path></svg></div> <a href="/" class="home-link router-link-active"><img src="/RogueEngineLogotypeOMG.svg" alt="Docs" class="logo"> <span class="site-name can-hide">Docs</span></a> <div class="links"><div class="search-box"><input aria-label="Search" autocomplete="off" spellcheck="false" value=""> <!----></div> <nav class="nav-links can-hide"><div class="nav-item"><a href="https://rogueengine.io" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Rogue Engine
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></div> <!----></nav></div></header> <div class="sidebar-mask"></div> <aside class="sidebar"><nav class="nav-links"><div class="nav-item"><a href="https://rogueengine.io" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Rogue Engine
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></div> <!----></nav>  <ul class="sidebar-links"><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Getting Started</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/" aria-current="page" class="sidebar-link">Getting Started</a></li><li><a href="/GettingStarted/YourFirstProject.html" class="sidebar-link">Your First Project</a></li><li><a href="/GettingStarted/NextSteps.html" class="sidebar-link">Next Steps</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Workflow</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/Workflow/EditorLayout.html" class="sidebar-link">Editor Layout</a></li><li><a href="/Workflow/ImportingAssets.html" class="sidebar-link">Importing Assets</a></li><li><a href="/Workflow/LoadingAssets.html" class="sidebar-link">Loading Assets</a></li><li><a href="/Workflow/AssetManager.html" class="sidebar-link">Asset Manager</a></li><li><a href="/Workflow/BuildingYourProject.html" class="sidebar-link">Building Your Project</a></li><li><a href="/Workflow/StaticAssets.html" class="sidebar-link">Static Assets</a></li><li><a href="/Workflow/Marketplace.html" class="sidebar-link">Marketplace</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Assets</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/Assets/Scenes.html" class="sidebar-link">Scenes</a></li><li><a href="/Assets/Materials.html" class="sidebar-link">Materials</a></li><li><a href="/Assets/Components.html" class="sidebar-link">Components</a></li><li><a href="/Assets/AudioAssets.html" class="sidebar-link">Audio Assets</a></li><li><a href="/Assets/Prefabs.html" class="sidebar-link">Prefabs</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading open"><span>Engine API</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/EngineAPI/App.html" class="sidebar-link">App</a></li><li><a href="/EngineAPI/AudioAsset.html" class="sidebar-link">AudioAsset</a></li><li><a href="/EngineAPI/Component.html" class="sidebar-link">Component</a></li><li><a href="/EngineAPI/Debug.html" class="sidebar-link">Debug</a></li><li><section class="sidebar-group is-sub-group depth-1"><a href="/EngineAPI/Input/Input" aria-current="page" class="sidebar-heading clickable router-link-exact-active router-link-active open active"><span>Input</span> <!----></a> <ul class="sidebar-links sidebar-group-items"><li><a href="/EngineAPI/Input/Mouse.html" class="sidebar-link">Mouse</a></li><li><a href="/EngineAPI/Input/Keyboard.html" class="sidebar-link">Keyboard</a></li><li><a href="/EngineAPI/Input/TouchController.html" class="sidebar-link">TouchController</a></li><li><a href="/EngineAPI/Input/GamepadController.html" class="sidebar-link">GamepadController</a></li></ul></section></li><li><a href="/EngineAPI/Prefab.html" class="sidebar-link">Prefab</a></li><li><a href="/EngineAPI/Runtime.html" class="sidebar-link">Runtime</a></li><li><a href="/EngineAPI/SceneController.html" class="sidebar-link">SceneController</a></li><li><a href="/EngineAPI/Functions.html" class="sidebar-link">Functions</a></li><li><a href="/EngineAPI/Events.html" class="sidebar-link">Events</a></li><li><a href="/EngineAPI/Tags.html" class="sidebar-link">Tags</a></li></ul></section></li></ul> </aside> <main class="page"> <div class="theme-default-content content__default"><h3 id="input"><a href="#input" class="header-anchor">#</a> Input</h3> <p>The <strong>Input</strong> controller provides references to the mouse keyboard and touch controllers as well as a list of the connected gamepads.</p> <p>You can use these to handle user input on your project. No need to go around creating listeners everywhere. Any other input sources being maintained by the engine in the future will be added here.</p> <p>It also provides an action-based system to help you easily bind, rebind and set multiple mappings for different input devices.</p> <p>As an example, you could have a mapping to control a character with gamepad or mouse and keyboard, and a second mapping to drive for when your character jumps into a car.</p> <h4 id="mouse"><a href="#mouse" class="header-anchor">#</a> .mouse</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code>mouse<span class="token operator">:</span> Mouse
</code></pre></div><p>The <a href="/EngineAPI/Input/Mouse">Mouse</a> instance being used to handle mouse events.</p> <h4 id="keyboard"><a href="#keyboard" class="header-anchor">#</a> .keyboard</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code>keyboard<span class="token operator">:</span> Keyboard
</code></pre></div><p>The <a href="/EngineAPI/Input/Keyboard">Keyboard</a> instance being used to handle keyboard events.</p> <h4 id="touch"><a href="#touch" class="header-anchor">#</a> .touch</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code>touch<span class="token operator">:</span> Touch
</code></pre></div><p>The <a href="/EngineAPI/Input/TouchController">Touch</a> instance being used to handle touch events.</p> <h4 id="gamepads"><a href="#gamepads" class="header-anchor">#</a> .gamepads</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code>gamepads<span class="token operator">:</span> GamepadController<span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre></div><p>A list of <a href="/EngineAPI/Input/GamepadController">GamepadController</a> instances being used to handle gamepad interactions. It holds all the active Gamepads in order of activation.</p> <h4 id="playerinputs"><a href="#playerinputs" class="header-anchor">#</a> .playerInputs</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code>playerInputs<span class="token operator">:</span> <span class="token punctuation">{</span>
  MouseAndKeyboard<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  Gamepads<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>This is the input configuration for all players, where the numeric values represent the index of the player (0 is player 1, etc.)</p> <p><strong>Default</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token punctuation">{</span>
  MouseAndKeyboard<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// Player 1 will use Mouse and keyboard</span>
  Gamepads<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Player 1 will use gamepad at 0</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span>playerInputs <span class="token operator">=</span> <span class="token punctuation">{</span>
  MouseAndKeyboard<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// Player 2 will use Mouse and keyboard</span>
  Gamepads<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Player 1 will use the first detected gamepad and Player 3 will use the second.</span>
<span class="token punctuation">}</span>

<span class="token comment">// Add the third gamepad for player 4</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span>playerInputs<span class="token punctuation">.</span>Gamepads<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="methods"><a href="#methods" class="header-anchor">#</a> Methods</h3> <h4 id="setactionmap"><a href="#setactionmap" class="header-anchor">#</a> .setActionMap</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">setActionMap</span>(bindings: <a href="#inputaction-type">GamepadAxes</a>): void
</code></pre></div> <p>Set the Input bindings for the actions in your app by passing in an <a href="#inputaction-type">InputAction</a> object. This will replace any existing bindings.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token comment">// By default it's set in the following way:</span>
Input<span class="token punctuation">.</span><span class="token function">setActionMap</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  Move<span class="token operator">:</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token string">&quot;Axes&quot;</span><span class="token punctuation">,</span>
    Keyboard<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;KeyW&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KeyS&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KeyA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KeyD&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    Gamepad<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    Touch<span class="token operator">:</span> <span class="token punctuation">{</span>area<span class="token operator">:</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> normalize<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  Look<span class="token operator">:</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token string">&quot;Axes&quot;</span><span class="token punctuation">,</span>
    Gamepad<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> mult<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    Mouse<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    Touch<span class="token operator">:</span> <span class="token punctuation">{</span>area<span class="token operator">:</span> <span class="token string">&quot;right&quot;</span><span class="token punctuation">,</span> mult<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  Jump<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&quot;Button&quot;</span><span class="token punctuation">,</span> Keyboard<span class="token operator">:</span> <span class="token string">&quot;Space&quot;</span><span class="token punctuation">,</span> Gamepad<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> Touch<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  Fire<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&quot;Button&quot;</span><span class="token punctuation">,</span> Mouse<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> Gamepad<span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> Touch<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  Select<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&quot;Button&quot;</span><span class="token punctuation">,</span> Mouse<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> Touch<span class="token operator">:</span> <span class="token string">&quot;Tap&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="bindaxes"><a href="#bindaxes" class="header-anchor">#</a> .bindAxes</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">bindAxes</span>(actionName: string, bind: {
  Gamepad?: <a href="#gamepadaxes-type">GamepadAxes</a>,
  Keyboard?: <a href="#keyboardaxes-type">KeyboardAxes</a>,
  Mouse?: <a href="#mouseaxes-type">MouseAxes</a>,
  Touch?: <a href="#touchaxes-type">TouchAxes</a>,
}, player?: number): void
</code></pre></div> <p>Set the Input bindings for an axes-based action. Check out the <a href="#inputaction-type">Types</a> section to see the structure.</p> <p>You can define a binding for any or all input devices at once.</p> <p>You can pass in an optional index parameter to set the mapping only for a specific player's configuration. This will only make sense for the case of Gamepads, naturally.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token comment">// Set the Move action for player 2 to use the right stick.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Move&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Gamepad<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// This will replace the existing defualt binding of axis 0 and set</span>
<span class="token comment">// it to the Steer action.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Steer&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Gamepad<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// To prevent that create a separate mapping using the Mapping.Action</span>
<span class="token comment">// pattern. This will create a separate, independent mapping.</span>
<span class="token comment">// Here we also omit the y axis and use only the horizontal axis.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Vehicle.Steer&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Gamepad<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> Keyboard<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token string">&quot;KeyA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KeyD&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Trigger the Look function with multiple bindings</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Look&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// Using the left stick with an optional multiplier to adjust the</span>
  <span class="token comment">// sensitivity and direction.</span>
  Gamepad<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> mult<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// To use the mouse we must pass in the sensitivity. In this case,</span>
  <span class="token comment">// we're cutting it by half.</span>
  Mouse<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// We're using the movement on the right side of the touch screen</span>
  <span class="token comment">// and passing in an optional multiplier to adjust the sensitivity</span>
  <span class="token comment">// and direction</span>
  Touch<span class="token operator">:</span> <span class="token punctuation">{</span>area<span class="token operator">:</span> <span class="token string">&quot;right&quot;</span><span class="token punctuation">,</span> mult<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="bindbutton"><a href="#bindbutton" class="header-anchor">#</a> .bindButton</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">bindButton</span><span class="token punctuation">(</span>actionName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> bind<span class="token operator">:</span> <span class="token punctuation">{</span>
  Gamepad<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  Keyboard<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  Mouse<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token string">&quot;WheelUp&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;WheelDown&quot;</span><span class="token punctuation">,</span>
  Touch<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token string">&quot;Tap&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> player<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre></div><p>Set the Input bindings for an button-based action. You can define a binding for any or all input devices at once.</p> <p>You can pass in an optional index parameter to set the mapping only for a specific player's configuration. This will only make sense for the case of Gamepads, naturally.</p> <p>In the case of the Gamepad, the number represents a gamepad button same as for the <a href="/EngineAPI/Input/GamepadController">GamepadController</a>.</p> <p>In the case of the Keyboard, the string reprensents the standard <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values" target="_blank" rel="noopener noreferrer">KeyboardEvent.code<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p> <p>In the case of the Mouse, we can pass in the standard button number or &quot;WeelUp&quot;/&quot;WeelDown&quot; to capture the sequential wheel movement.</p> <p>In the case of the Touch, we can pass in the button index as defined in <a href="/EngineAPI/Input/TouchController#buttons">RE.Input.touch.buttons</a> or alternatively, the &quot;Tap&quot; action detects a single tap on the screen.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token comment">// Set a &quot;Jump&quot; action to trigger with the Space key, Gamepad button 0 or the Touch button 1</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindButton</span><span class="token punctuation">(</span><span class="token string">&quot;Jump&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Keyboard<span class="token operator">:</span> <span class="token string">&quot;Space&quot;</span><span class="token punctuation">,</span> Gamepad<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> Touch<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Set a &quot;Select&quot; action to trigger whith the left mouse button or a Tap on the screen.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindButton</span><span class="token punctuation">(</span><span class="token string">&quot;Select&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Mouse<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> Touch<span class="token operator">:</span> <span class="token string">&quot;Tap&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// This will replace the existing binding of the left mouse button to be used for DoStuff</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindButton</span><span class="token punctuation">(</span><span class="token string">&quot;DoStuff&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Mouse<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// To prevent that, create a separate mapping using the Mapping.Action</span>
<span class="token comment">// pattern. This will create a separate, independent mapping.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindButton</span><span class="token punctuation">(</span><span class="token string">&quot;MyMapping.DoStuff&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Mouse<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div> <h4 id="getaxes"><a href="#getaxes" class="header-anchor">#</a> .getAxes</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getAxes</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> player<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
</code></pre></div><p>You can use this in any of the game loop methods to listen for an axes-based action in your app, by passing in the action name and optionally, the player index to capture the given action from a specific player.</p> <p>It returns a Vector 2 with the values provided by the input devices as configured for that action.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">&quot;rogue-engine&quot;</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
<span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">{</span>x<span class="token punctuation">,</span> y<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">getAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Move&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">// Moving the Object3D containing this component with</span>
  <span class="token comment">// the values returned by the Move action.</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>object3d<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">+=</span> x<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>object3d<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">+=</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="getdown"><a href="#getdown" class="header-anchor">#</a> .getDown</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getDown</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> player<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
</code></pre></div><p>Captures a button-based action in the frame that it's being triggered. You need to pass in the action name and optionally, the player index to capture the given action from a specific player.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">&quot;rogue-engine&quot;</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
<span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">getDown</span><span class="token punctuation">(</span><span class="token string">&quot;Jump&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="getup"><a href="#getup" class="header-anchor">#</a> .getUp</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getUp</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> player<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
</code></pre></div><p>Captures a button-based action in the frame that it's being released. You need to pass in the action name and optionally, the player index to capture the given action from a specific player.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">&quot;rogue-engine&quot;</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
<span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">getUp</span><span class="token punctuation">(</span><span class="token string">&quot;Select&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>picked <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">pick</span><span class="token punctuation">(</span><span class="token constant">RE</span><span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="getpressed"><a href="#getpressed" class="header-anchor">#</a> .getPressed</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getPressed</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> player<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token boolean">true</span>
</code></pre></div><p>Captures a button-based action on every frame that it's active. You need to pass in the action name and optionally, the player index to capture the given action from a specific player.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">&quot;rogue-engine&quot;</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
<span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">getDown</span><span class="token punctuation">(</span><span class="token string">&quot;Fire&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>rainbowPrefab<span class="token punctuation">.</span><span class="token function">instantiate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="getplayerconfig"><a href="#getplayerconfig" class="header-anchor">#</a> .getPlayerConfig</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getPlayerConfig</span><span class="token punctuation">(</span>player<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  gamepadIndex<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  useMouseAndKeyboard<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Retrieves the input configuration for a specific player, given its index.</p> <h3 id="types"><a href="#types" class="header-anchor">#</a> Types</h3> <h4 id="gamepadaxes-type"><a href="#gamepadaxes-type" class="header-anchor">#</a> GamepadAxes Type</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">GamepadAxes</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  x<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  y<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  mult<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token punctuation">[</span>
  up<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> 
  down<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> 
  left<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> 
  right<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> 
  mult<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">[</span>xMult<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> yMult<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
</code></pre></div><p>This is the representation of the axes bindings for a Gamepad. These can be either a object with either or both x and y fields, or an array with a set of buttons. In both cases we can pass in a multiplier to determine the sensitivity and direction.</p> <p>In the case of the object, we can pass both or either the x and y parameters, making it effectively a one dimensional vector. Likewise, in the case of the array we can omit some directions to receive input only for a certain direction that we care about.</p> <p>The x and y parameters should be the index for an axis in the gamepad, same as with the <a href="/EngineAPI/Input/GamepadController">GamepadController</a>. These are used for the analog sticks.</p> <p>The up/down/left/right will take the button number in a gamepad, same as with the <a href="/EngineAPI/Input/GamepadController">GamepadController</a>. This is suitable, for instance, to define movement with the d-pad.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token comment">// Trigger the Move action using the left stick</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Move&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Gamepad<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Trigger the Move action for player 2 using the d-pad</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Move&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Gamepad<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// You can optionally pass in a multiplier vector to adjust the sensitivity and direction.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Move&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Gamepad<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Trigger the Look function with the right stick and pass in an optional multiplier vector </span>
<span class="token comment">// to adjust the sensitivity and direction.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Look&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Gamepad<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> mult<span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="keyboardaxes-type"><a href="#keyboardaxes-type" class="header-anchor">#</a> KeyboardAxes Type</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">KeyboardAxes</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  up<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> 
  down<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> 
  left<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> 
  right<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> 
  mult<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">[</span>xMult<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> yMult<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
</code></pre></div><p>This is the representation of the axes bindings for the Keyboard. These are passed in the form of an array of standard key strings and an optional multiplier to determine the sensitivity and direction.</p> <p>we can omit some directions to receive input only for a certain direction that we care about, making it effectively a one dimensional vector.</p> <p><strong>Note:</strong> see <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values" target="_blank" rel="noopener noreferrer">KeyboardEvent.code<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> for a list of the accepted code values.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token comment">// Trigger the Move action using WASD</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Move&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Keyboard<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;KeyW&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KeyS&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KeyA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KeyD&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="mouseaxes-type"><a href="#mouseaxes-type" class="header-anchor">#</a> MouseAxes Type</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MouseAxes</span> <span class="token operator">=</span> <span class="token punctuation">[</span>xMult<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> yMult<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span>
</code></pre></div><p>This is the representation of the mouse movement binding. It takes an array to define the sensitivity and direction on the x and y axis respectively.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token comment">// Trigger the Look action using the Mouse movement with full sensitivity</span>
<span class="token comment">// and with the y axis flipped.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Look&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Mouse<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="touchaxes-type"><a href="#touchaxes-type" class="header-anchor">#</a> TouchAxes Type</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">TouchAxes</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  area<span class="token operator">:</span> <span class="token string">&quot;left&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;right&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;view&quot;</span><span class="token punctuation">,</span>
  mult<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  normalize<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">[</span>radiusX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> radiusY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token punctuation">[</span>
  up<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> 
  down<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> 
  left<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> 
  right<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> 
  mult<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">[</span>xMult<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> yMult<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre></div><p>This is the representation of the axes bindings for the <a href="/EngineAPI/Input/TouchController">TouchController</a>. These can be either a object with the touch area and a normalize option, or an array with a set of buttons. In both cases we can pass in a multiplier to determine the sensitivity and direction.</p> <p>In the case of the object, we must pass in the area to be either the entire &quot;view&quot;, the &quot;left&quot; half or the &quot;right&quot; half. The normalize field lets us define a distance in pixels where our movement will go from 0 to 1 like an analog stick. Very useful for things like movement.</p> <p>The up/down/left/right will take the button index in <a href="/EngineAPI/Input/TouchController#buttons">RE.Input.touch.buttons</a>. This is suitable, for instance, to define movement with touch buttons on the screen, such as the steering in a car game.</p> <p><strong>Example</strong></p> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token comment">// Trigger the Move action using the left half of the touch screen. We pass in the optional normalize array</span>
<span class="token comment">// to set a maximum travel distance of 10, effectively turning the left side of the touch screen into an analog stick</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Move&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Touch<span class="token operator">:</span> <span class="token punctuation">{</span>area<span class="token operator">:</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> normalize<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Trigger the Move action for player 2 using 4 touch buttons with their given index at RE.Input.touch.buttons</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Move&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Touch<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// You can optionally pass in a multiplier vector to adjust the sensitivity and direction.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Move&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Touch<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Trigger the Look function with the right half of the touch screen and pass in an optional multiplier vector </span>
<span class="token comment">// to adjust the sensitivity and direction.</span>
<span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">bindAxes</span><span class="token punctuation">(</span><span class="token string">&quot;Look&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>Touch<span class="token operator">:</span> <span class="token punctuation">{</span>area<span class="token operator">:</span> <span class="token string">&quot;right&quot;</span><span class="token punctuation">,</span> mult<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="inputaction-type"><a href="#inputaction-type" class="header-anchor">#</a> InputAction Type</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">InputAction</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> InputAxesBinds <span class="token operator">|</span> InputBinds<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="inputaxesbinds-type"><a href="#inputaxesbinds-type" class="header-anchor">#</a> InputAxesBinds Type</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code>type InputAxesBinds = {
  type: &quot;Axes&quot;,
  Gamepad?: <a href="#gamepadaxes-type">GamepadAxes</a>,
  Keyboard?: <a href="#keyboardaxes-type">KeyboardAxes</a>,
  Mouse?: <a href="#mouseaxes-type">MouseAxes</a>,
  Touch?: <a href="#touchaxes-type">TouchAxes</a>,
}
</code></pre></div> <p>This is the representation of the bindings for an axes-based action. Click on each type to see their definitions.</p> <h4 id="inputbinds-type"><a href="#inputbinds-type" class="header-anchor">#</a> InputBinds Type</h4> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">InputBinds</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&quot;Button&quot;</span><span class="token punctuation">;</span>
  Keyboard<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  Mouse<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token string">&quot;WheelUp&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;WheelDown&quot;</span><span class="token punctuation">;</span>
  Gamepad<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  Touch<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token string">&quot;Tap&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>This is the representation of the bindings for a button-based action.</p> <p>In the case of the Gamepad, the number represents a gamepad button same as for the <a href="/EngineAPI/Input/GamepadController">GamepadController</a>.</p> <p>In the case of the Keyboard, the string reprensents the standard <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values" target="_blank" rel="noopener noreferrer">KeyboardEvent.code<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p> <p>In the case of the Mouse, we can pass in the standard button number or &quot;WeelUp&quot;/&quot;WeelDown&quot; to capture the sequential wheel movement.</p> <p>In the case of the Touch, we can pass in the button index as defined in <a href="/EngineAPI/Input/TouchController#buttons">RE.Input.touch.buttons</a> or alternatively, the &quot;Tap&quot; action detects a single tap on the screen.</p></div> <footer class="page-edit"><!----> <!----></footer> <!----> </main></div><div class="global-ui"></div></div>
    <script src="/assets/js/app.9264d7d6.js" defer></script><script src="/assets/js/2.b6990dbb.js" defer></script><script src="/assets/js/1.d6bea73e.js" defer></script><script src="/assets/js/37.b62504ea.js" defer></script>
  </body>
</html>
