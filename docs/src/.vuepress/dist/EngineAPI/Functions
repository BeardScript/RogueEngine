<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Functions | Docs</title>
    <meta name="generator" content="VuePress 1.9.10">
    <link rel="icon" type="image/svg" href="RogueEngineLogo.svg">
    <meta name="description" content="Documentation for Rogue Engine">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    
    <link rel="preload" href="/assets/css/0.styles.9e13fbe0.css" as="style"><link rel="preload" href="/assets/js/app.9264d7d6.js" as="script"><link rel="preload" href="/assets/js/2.b6990dbb.js" as="script"><link rel="preload" href="/assets/js/1.d6bea73e.js" as="script"><link rel="preload" href="/assets/js/35.1c2f25a8.js" as="script"><link rel="prefetch" href="/assets/js/10.74753b20.js"><link rel="prefetch" href="/assets/js/11.166c98b8.js"><link rel="prefetch" href="/assets/js/12.c8a39ed2.js"><link rel="prefetch" href="/assets/js/13.5c262607.js"><link rel="prefetch" href="/assets/js/14.11a9396d.js"><link rel="prefetch" href="/assets/js/15.f5beb89c.js"><link rel="prefetch" href="/assets/js/16.f42dacb8.js"><link rel="prefetch" href="/assets/js/17.13576655.js"><link rel="prefetch" href="/assets/js/18.0946172e.js"><link rel="prefetch" href="/assets/js/19.444ea1cf.js"><link rel="prefetch" href="/assets/js/20.eb988b8a.js"><link rel="prefetch" href="/assets/js/21.5c61a7f1.js"><link rel="prefetch" href="/assets/js/22.42cf6496.js"><link rel="prefetch" href="/assets/js/23.2269f217.js"><link rel="prefetch" href="/assets/js/24.3ddbe1a4.js"><link rel="prefetch" href="/assets/js/25.e0378aed.js"><link rel="prefetch" href="/assets/js/26.ca7a8ccf.js"><link rel="prefetch" href="/assets/js/27.a00b4cbf.js"><link rel="prefetch" href="/assets/js/28.0bfccc0f.js"><link rel="prefetch" href="/assets/js/29.77b365c4.js"><link rel="prefetch" href="/assets/js/3.4ca62f85.js"><link rel="prefetch" href="/assets/js/30.77b4b317.js"><link rel="prefetch" href="/assets/js/31.7ecb75d9.js"><link rel="prefetch" href="/assets/js/32.8a8dd005.js"><link rel="prefetch" href="/assets/js/33.422bab81.js"><link rel="prefetch" href="/assets/js/34.1c6d6dea.js"><link rel="prefetch" href="/assets/js/36.937e3802.js"><link rel="prefetch" href="/assets/js/37.b62504ea.js"><link rel="prefetch" href="/assets/js/38.614d3171.js"><link rel="prefetch" href="/assets/js/39.758b35c5.js"><link rel="prefetch" href="/assets/js/4.e6118056.js"><link rel="prefetch" href="/assets/js/40.5c1929f6.js"><link rel="prefetch" href="/assets/js/41.cb779bae.js"><link rel="prefetch" href="/assets/js/42.6f628348.js"><link rel="prefetch" href="/assets/js/43.7663434e.js"><link rel="prefetch" href="/assets/js/44.3ad994c2.js"><link rel="prefetch" href="/assets/js/45.0e05dce4.js"><link rel="prefetch" href="/assets/js/46.76b2f708.js"><link rel="prefetch" href="/assets/js/47.b3b20a73.js"><link rel="prefetch" href="/assets/js/48.64fa5ba3.js"><link rel="prefetch" href="/assets/js/49.7500067e.js"><link rel="prefetch" href="/assets/js/5.260bfa12.js"><link rel="prefetch" href="/assets/js/50.97915493.js"><link rel="prefetch" href="/assets/js/51.1cc6283c.js"><link rel="prefetch" href="/assets/js/52.03afe092.js"><link rel="prefetch" href="/assets/js/53.d79af6d4.js"><link rel="prefetch" href="/assets/js/54.30fd292c.js"><link rel="prefetch" href="/assets/js/6.a06e9bf2.js"><link rel="prefetch" href="/assets/js/7.aa8bfe18.js"><link rel="prefetch" href="/assets/js/vendors~docsearch.446d5291.js">
    <link rel="stylesheet" href="/assets/css/0.styles.9e13fbe0.css">
  </head>
  <body>
    <div id="app" data-server-rendered="true"><div class="theme-container"><header class="navbar"><div class="sidebar-button"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" viewBox="0 0 448 512" class="icon"><path fill="currentColor" d="M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"></path></svg></div> <a href="/" class="home-link router-link-active"><img src="/RogueEngineLogotypeOMG.svg" alt="Docs" class="logo"> <span class="site-name can-hide">Docs</span></a> <div class="links"><div class="search-box"><input aria-label="Search" autocomplete="off" spellcheck="false" value=""> <!----></div> <nav class="nav-links can-hide"><div class="nav-item"><a href="https://rogueengine.io" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Rogue Engine
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></div> <!----></nav></div></header> <div class="sidebar-mask"></div> <aside class="sidebar"><nav class="nav-links"><div class="nav-item"><a href="https://rogueengine.io" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Rogue Engine
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></div> <!----></nav>  <ul class="sidebar-links"><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Getting Started</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/" aria-current="page" class="sidebar-link">Getting Started</a></li><li><a href="/GettingStarted/YourFirstProject.html" class="sidebar-link">Your First Project</a></li><li><a href="/GettingStarted/NextSteps.html" class="sidebar-link">Next Steps</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Workflow</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/Workflow/EditorLayout.html" class="sidebar-link">Editor Layout</a></li><li><a href="/Workflow/ImportingAssets.html" class="sidebar-link">Importing Assets</a></li><li><a href="/Workflow/LoadingAssets.html" class="sidebar-link">Loading Assets</a></li><li><a href="/Workflow/AssetManager.html" class="sidebar-link">Asset Manager</a></li><li><a href="/Workflow/BuildingYourProject.html" class="sidebar-link">Building Your Project</a></li><li><a href="/Workflow/StaticAssets.html" class="sidebar-link">Static Assets</a></li><li><a href="/Workflow/Marketplace.html" class="sidebar-link">Marketplace</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading"><span>Assets</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/Assets/Scenes.html" class="sidebar-link">Scenes</a></li><li><a href="/Assets/Materials.html" class="sidebar-link">Materials</a></li><li><a href="/Assets/Components.html" class="sidebar-link">Components</a></li><li><a href="/Assets/AudioAssets.html" class="sidebar-link">Audio Assets</a></li><li><a href="/Assets/Prefabs.html" class="sidebar-link">Prefabs</a></li></ul></section></li><li><section class="sidebar-group depth-0"><p class="sidebar-heading open"><span>Engine API</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/EngineAPI/App.html" class="sidebar-link">App</a></li><li><a href="/EngineAPI/AudioAsset.html" class="sidebar-link">AudioAsset</a></li><li><a href="/EngineAPI/Component.html" class="sidebar-link">Component</a></li><li><a href="/EngineAPI/Debug.html" class="sidebar-link">Debug</a></li><li><section class="sidebar-group is-sub-group depth-1"><a href="/EngineAPI/Input/Input" class="sidebar-heading clickable"><span>Input</span> <!----></a> <ul class="sidebar-links sidebar-group-items"><li><a href="/EngineAPI/Input/Mouse.html" class="sidebar-link">Mouse</a></li><li><a href="/EngineAPI/Input/Keyboard.html" class="sidebar-link">Keyboard</a></li><li><a href="/EngineAPI/Input/TouchController.html" class="sidebar-link">TouchController</a></li><li><a href="/EngineAPI/Input/GamepadController.html" class="sidebar-link">GamepadController</a></li></ul></section></li><li><a href="/EngineAPI/Prefab.html" class="sidebar-link">Prefab</a></li><li><a href="/EngineAPI/Runtime.html" class="sidebar-link">Runtime</a></li><li><a href="/EngineAPI/SceneController.html" class="sidebar-link">SceneController</a></li><li><a href="/EngineAPI/Functions.html" class="active sidebar-link">Functions</a></li><li><a href="/EngineAPI/Events.html" class="sidebar-link">Events</a></li><li><a href="/EngineAPI/Tags.html" class="sidebar-link">Tags</a></li></ul></section></li></ul> </aside> <main class="page"> <div class="theme-default-content content__default"><h3 id="functions"><a href="#functions" class="header-anchor">#</a> Functions</h3> <h3 id="registercomponent"><a href="#registercomponent" class="header-anchor">#</a> registerComponent</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token generic-function"><span class="token function">registerComponent</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Component<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ComponentClass<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre></div><p>This function, as its name implies, gives us the ability to register a component. It takes the component class primitive as a parameter and stores it in the Engine's internal Component primitives map. This makes it available to be added to any <a href="https://threejs.org/docs/#api/en/core/Object3D" target="_blank" rel="noopener noreferrer">Object3D<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> in our scene either by dragging and dropping it in the editor or through code, using the <a href="#addcomponent">addComponent</a> function.</p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">RE<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
<span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">registerComponent</span><span class="token punctuation">(</span>MyComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><h3 id="addcomponent"><a href="#addcomponent" class="header-anchor">#</a> addComponent</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">addComponent</span><span class="token punctuation">(</span>component<span class="token operator">:</span> Component<span class="token punctuation">)</span>
</code></pre></div><p>This function adds the given instance of a component to the Engine's internal components map. This makes it available to the active <a href="/EngineAPI/SceneController">SceneController</a> which will proceed to &quot;awaken&quot; it and run its loop methods every frame. In a way, this function brings the component to life, so if you wish to do something with the component before it gets into the animation loop you should do it before calling it.</p> <p><strong>Note:</strong> this function triggers the <a href="#oncomponentadded">onComponentAdded</a> event.</p> <h3 id="removecomponent"><a href="#removecomponent" class="header-anchor">#</a> removeComponent</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">removeComponent</span><span class="token punctuation">(</span>component<span class="token operator">:</span> Component<span class="token punctuation">)</span>
</code></pre></div><p>This function removes the given instance of a component from the Engine's internal components map. This makes it unavailable to the active <a href="/EngineAPI/SceneController">SceneController</a> stopping its animation loop functions. Since the relation to the <a href="https://threejs.org/docs/#api/en/core/Object3D" target="_blank" rel="noopener noreferrer">Object3D<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> is set within the component, calling this function will also make the component unavailable to that object. Make sure you lose any reference to it so that it can be garbage collected as soon as possible.</p> <p><strong>Note:</strong> this function triggers the <a href="#oncomponentremoved">onComponentRemoved</a> event.</p> <h3 id="removecomponents"><a href="#removecomponents" class="header-anchor">#</a> removeComponents</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">removeComponents</span><span class="token punctuation">(</span>object3d<span class="token operator">:</span> Object3D<span class="token punctuation">,</span> recursive<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span>
</code></pre></div><p>This handy and flexible function lets us remove all components related to the given <a href="https://threejs.org/docs/#api/en/core/Object3D" target="_blank" rel="noopener noreferrer">Object3D<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> and you can optionally pass in a <strong>recursive</strong> flag to remove all components from all its children recursively.</p> <p><strong>Note:</strong> this method will fire the <a href="#onremovecomponent">onRemoveComponent</a> event for every removed component.</p> <h3 id="getcomponent"><a href="#getcomponent" class="header-anchor">#</a> getComponent</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token generic-function"><span class="token function">getComponent</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Component<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span> ComponentClass<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span> args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">,</span> object3d<span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D<span class="token punctuation">,</span> inAncestor<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span>
</code></pre></div><p>This function retrieves a <a href="/EngineAPI/Component">Component</a> related to an <a href="https://threejs.org/docs/#api/en/core/Object3D" target="_blank" rel="noopener noreferrer">Object3D<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>. This is handy if you don't want to remember component names or keep maps with them. Just call this function passing in the component type and, optionally, the <strong>Object3D</strong>. If it can't find anything it'll return undefined.</p> <p>If you don't pass in an <strong>Object3D</strong> it will return the first component it can find of the given type.</p> <p>When the <strong>inAncestor</strong> argument is true, if it can't find the given component in the given object, it will look for it in its ancestors. You must provide an <strong>Object3D</strong> if inAncestor is set to true.</p> <p>When possible always use <a href="/EngineAPI/Component#get">ComponentClass.get()</a> instead of this method.</p> <p><strong>Example:</strong></p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Object3D <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'three'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> MyComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./MyComponent'</span>

<span class="token keyword">function</span> <span class="token function">getMyComponent</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">object3d</span><span class="token operator">:</span> Object3D</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getComponent</span><span class="token punctuation">(</span>MyComponent<span class="token punctuation">,</span> object3d<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="getcomponents"><a href="#getcomponents" class="header-anchor">#</a> getComponents</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token generic-function"><span class="token function">getComponents</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Component<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span> ComponentClass<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span> args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span> <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre></div><p>This function retrieves all the <a href="/EngineAPI/Component">Component</a>s of the given type.</p> <h3 id="getobjectcomponents"><a href="#getobjectcomponents" class="header-anchor">#</a> getObjectComponents</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getObjectComponents</span><span class="token punctuation">(</span>object3d<span class="token operator">:</span> Object3D<span class="token punctuation">)</span><span class="token operator">:</span> Component<span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre></div><p>This function retrieves all the <a href="/EngineAPI/Component">Component</a>s related to the given <a href="https://threejs.org/docs/#api/en/core/Object3D" target="_blank" rel="noopener noreferrer">Object3D<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>.</p> <h3 id="getcomponentbyname"><a href="#getcomponentbyname" class="header-anchor">#</a> getComponentByName</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getComponentByName</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> object3d<span class="token operator">?</span><span class="token operator">:</span> Object3D<span class="token punctuation">,</span> inAncestor<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> Component
</code></pre></div><p>This handy function returns the first component with the given name, found in the Engine's internal components map. If you pass in the optional <a href="https://threejs.org/docs/#api/en/core/Object3D" target="_blank" rel="noopener noreferrer">Object3D<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> parameter, it will return the first component with the given name within that object. This is the preferred way since not only it does not require you to keep unique names for all your components throughout the scene, but it is also more performant. So, if you know the <strong>Object3D</strong>, pass it in.</p> <p>When the <strong>inAncestor</strong> argument is true, if it can't find the given component in the given object, it will look for it in its ancestors. You must provide an <strong>Object3D</strong> if inAncestor is set to true.</p> <p>When possible always use <a href="/EngineAPI/Component#get">ComponentClass.get()</a> instead of this method.</p> <h3 id="traversecomponents"><a href="#traversecomponents" class="header-anchor">#</a> traverseComponents</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">traverseComponents</span><span class="token punctuation">(</span><span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span>component<span class="token operator">:</span> Component<span class="token punctuation">,</span> objectUUID<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span>
</code></pre></div><p>Runs the given function for every <a href="/EngineAPI/Component">Component</a> present in the current scene.</p> <h3 id="getstaticpath"><a href="#getstaticpath" class="header-anchor">#</a> getStaticPath</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getStaticPath</span><span class="token punctuation">(</span>path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
</code></pre></div><p>This function attaches the static folder address to the given path, which should be passed <strong>without the initial slash (/)</strong>. You should always use this method for your static assets given that it'll handle both the address in development and in a built project.</p> <p>For more information see the <a href="/Workflow/StaticAssets">Static Assets</a> article.</p> <p><strong>Example:</strong></p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getStaticPath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
<span class="token comment">// Retrieves the addres of the icon at: /Static/icons/myIcon.svg</span>
imgElement<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token function">getStaticPath</span><span class="token punctuation">(</span><span class="token string">&quot;icons/myIcon.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><h3 id="setenabled"><a href="#setenabled" class="header-anchor">#</a> setEnabled</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">setEnabled</span><span class="token punctuation">(</span>object<span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D<span class="token punctuation">,</span> enabled<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre></div><p>You can use this function to enable or disable the <code>runtime</code> features of an object which, essentially means that all of its components (and it's descendant's) will be rendered inactive.</p> <p>Enabling or Disabling an object will trigger the respective lifecycle events of an object's component and its descendants.</p> <p><strong>Example:</strong></p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">THREE</span> <span class="token keyword">from</span> <span class="token string">'three'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>

@<span class="token constant">RE</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">object3d</span><span class="token punctuation">(</span><span class="token punctuation">)</span> target<span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D<span class="token punctuation">;</span>

<span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="isenabled"><a href="#isenabled" class="header-anchor">#</a> isEnabled</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">isEnabled</span><span class="token punctuation">(</span>object<span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
</code></pre></div><p>Returns the enabled status of an object.</p> <p><strong>Example:</strong></p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">THREE</span> <span class="token keyword">from</span> <span class="token string">'three'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>

<span class="token function">toggleEnabled</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">object</span><span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> enabled <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">,</span> <span class="token operator">!</span>enabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="isactive"><a href="#isactive" class="header-anchor">#</a> isActive</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">isActive</span><span class="token punctuation">(</span>object<span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
</code></pre></div><p>Returns the active status of an object. An object is inactive when either itself or one of it's ancestors is disabled.</p> <p><strong>Example:</strong></p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">THREE</span> <span class="token keyword">from</span> <span class="token string">'three'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>

<span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">object</span><span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">isActive</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something if object is active</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="pick"><a href="#pick" class="header-anchor">#</a> pick</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">pick</span><span class="token punctuation">(</span>targets<span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D <span class="token operator">|</span> <span class="token keyword">undefined</span>
</code></pre></div><p>Picks an object under the pointer device. Supports both mouse and touch.</p> <p><strong>Example:</strong></p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>

<span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">getDown</span><span class="token punctuation">(</span><span class="token string">&quot;Select&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Get all objects in the scene with the &quot;Selectable&quot; tag</span>
    <span class="token keyword">const</span> targets <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">getWithAll</span><span class="token punctuation">(</span><span class="token string">&quot;Selectable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Pick the one under the pointer device.</span>
    <span class="token keyword">const</span> picked <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">pick</span><span class="token punctuation">(</span>targets<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>picked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Do something with the picked object.</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="getnearestwithtag"><a href="#getnearestwithtag" class="header-anchor">#</a> getNearestWithTag</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getNearestWithTag</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D<span class="token punctuation">,</span> tag<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D <span class="token operator">|</span> <span class="token keyword">undefined</span>
</code></pre></div><p>Gets the nearest parent of the given object with the given tag. This is especially useful to get the container of a nested object.</p> <p><strong>Example:</strong></p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>

<span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Capture a &quot;Select&quot; action input in this frame.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">getDown</span><span class="token punctuation">(</span><span class="token string">&quot;Select&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Get all objects in the scene with the &quot;Selectable&quot; tag.</span>
    <span class="token keyword">const</span> targets <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">getWithAll</span><span class="token punctuation">(</span><span class="token string">&quot;Selectable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Pick the one under the pointer device.</span>
    <span class="token keyword">const</span> picked <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">pick</span><span class="token punctuation">(</span>targets<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>picked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Get the container of the picked mesh.</span>
      <span class="token keyword">const</span> container <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">getNearestWithTag</span><span class="token punctuation">(</span>picked<span class="token punctuation">,</span> <span class="token string">&quot;Selectable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="getnearestgroup"><a href="#getnearestgroup" class="header-anchor">#</a> getNearestGroup</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getNearestGroup</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Object3D<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>Group <span class="token operator">|</span> <span class="token keyword">undefined</span>
</code></pre></div><p>Gets the nearest parent of type THREE.Group. This is especially useful to get the container of a nested object.</p> <p><strong>Example:</strong></p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>

<span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Capture a &quot;Select&quot; action input in this frame.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RE</span><span class="token punctuation">.</span>Input<span class="token punctuation">.</span><span class="token function">getDown</span><span class="token punctuation">(</span><span class="token string">&quot;Select&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Get all objects in the scene with the &quot;Selectable&quot; tag.</span>
    <span class="token keyword">const</span> targets <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span>Tags<span class="token punctuation">.</span><span class="token function">getWithAll</span><span class="token punctuation">(</span><span class="token string">&quot;Selectable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Pick the one under the pointer device.</span>
    <span class="token keyword">const</span> picked <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">pick</span><span class="token punctuation">(</span>targets<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>picked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Get the container group of the picked mesh.</span>
      <span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">getNearestGroup</span><span class="token punctuation">(</span>picked<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="getnormalizeddevicecoordinates"><a href="#getnormalizeddevicecoordinates" class="header-anchor">#</a> getNormalizedDeviceCoordinates</h3> <div class="language-typescript extra-class"><pre class="language-typescript"><code><span class="token function">getNormalizedDeviceCoordinates</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">}</span>
</code></pre></div><p>Takes screen space coordinates and returns a Vector with the normalized device coordinates.</p> <p><strong>Example:</strong></p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">RE</span> <span class="token keyword">from</span> <span class="token string">'rogue-engine'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>

<span class="token keyword">const</span> ndc <span class="token operator">=</span> <span class="token constant">RE</span><span class="token punctuation">.</span><span class="token function">getNormalizedDeviceCoordinates</span><span class="token punctuation">(</span>Input<span class="token punctuation">.</span>mouse<span class="token punctuation">.</span>x<span class="token punctuation">,</span> Input<span class="token punctuation">.</span>mouse<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>

raycaster<span class="token punctuation">.</span><span class="token function">setFromCamera</span><span class="token punctuation">(</span>ndc<span class="token punctuation">,</span> <span class="token constant">RE</span><span class="token punctuation">.</span>App<span class="token punctuation">.</span>sceneController<span class="token punctuation">.</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div></div> <footer class="page-edit"><!----> <!----></footer> <!----> </main></div><div class="global-ui"></div></div>
    <script src="/assets/js/app.9264d7d6.js" defer></script><script src="/assets/js/2.b6990dbb.js" defer></script><script src="/assets/js/1.d6bea73e.js" defer></script><script src="/assets/js/35.1c2f25a8.js" defer></script>
  </body>
</html>
